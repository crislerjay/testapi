npm init -y
npm i express mongodb mongoose cors dotenv
npm i nodemon -D

tools:
insomia
mongodb atlas
crislerjayvallo@gmail.com
@cjh0ngp0gi

render
crislerjayvallo@gmail.com
Cjh0ngp0gi


package.json
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "serve": "node index.js",
    "dev": "nodemon index.js"
  },

// //add a product
// router.post('/api/products', async (req, res) => {
//   try {
//     const product = await Product.create(req.body)
//     res.status(200).json(product)
//   } catch (error) {
//     res.status(500).json({message: error.message})
//   }
// })

// //get all product
// router.get('/api/products', async (req, res) => {
    // try {
    //   const products = await Product.find({})
    //   res.status(200).json(products)
    // } catch (error) {
    //   res.status(500).json({message: error.message})
    // }
// })

// //get single product
// router.get('/api/products/:id', async (req, res) => {
//   try {
//     const { id } = req.params
//     const product = await Product.findById(id)
//     res.status(200).json(product)
//   } catch (error) {
//     res.status(500).json({message: error.message})
//   }
// })

// //update a product
// router.put('/api/products/:id', async (req, res) => {
//   try {
//     const { id } = req.params
//     const product = await Product.findByIdAndUpdate(id, req.body)

//     if (!product) {
//       return res.status(404).json({message: 'Product not found!'})
//     }

//     const updatedProduct = await Product.findById(id)
//     res.status(200).json(updatedProduct)

//   } catch (error) {
//     res.status(500).json({message: error.message})
//   }
// })

// //delete a product
// router.delete('/api/products/:id', async (req, res) => {
//   try {
//     const { id } = req.params
//     const product = await Product.findByIdAndDelete(id)

//     if (!product) {
//       return res.status(404).json({message: 'Product not found!'})
//     }

//     res.status(200).json({message: 'Product deleted successfully!'})
//   } catch (error) {
//     res.status(500).json({message: error.message})
//   }
// })